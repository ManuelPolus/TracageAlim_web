@using Microsoft.AspNetCore.Mvc.Rendering
@using Tracage.Models
@using TracageAlmentaireWeb.DAL
@model Tracage.Models.Treatment

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal jumbotron" style="background: rgba(0,66,22,0.3);">
        <h4 style="margin-top: -4.5%;">Treatment creation</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <h3 class="text-center"> Select a step</h3>
    
        <div class="form-horizontal text-center">
            @{
                Process process = (Process)TempData["process"];
                Step step = (Step)TempData["SelectedStep"];
            }
            @foreach (Step s in process.Steps)
            {
                if (s.Id == step.Id)
                {
                    <div class="btn btn-sm btn-primary">
                        @Html.ActionLink(s.Name + "-" + s.Position, "ChangeStep", "TreatmentsManagement", new { st = s }, new { @Style = "color:white;" })
                    </div>
                }
                else
                {
                    <div class="btn btn-sm btn-success">
                        @Html.ActionLink(s.Name + "-" + s.Position, "ChangeStep", "TreatmentsManagement", s, new { @Style = "color:white;" })
                    </div>
                }


            }
        </div>
        <Hr />
        <div class="row">
            <!--Left part form-->
            <div class="center-block col-md-5">
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2  " })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, null, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", @Value = "" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.Label("Position in selected step :", null, new { @style = "margin-left:4%;" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control", @Value = step.Treatments.Count + 1 } })
                        @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger"})
                    </div>
                </div>
                @Html.HiddenFor(model => model.StepId, new { @Value = step.Id })

                <div class="form-group">
                    @Html.LabelFor(model => model.OutgoingState, htmlAttributes: new { @style = "margin-left:4%;", @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.Partial("~/Views/StatesManagement/Create.cshtml")
                    </div>
                </div>
                
                @Html.Partial("~/Views/UserScanRightsManagement/Create.cshtml");

                <div class="form-group">
                    <div class="col-md-7 text-center">
                        <input type="submit" value="Create" class="btn btn-default text-center" />
                    </div>
                </div>
            </div>


            <!--Right part Process info-->
            <div class="center-block col-md-6 text-center jumbotron" style="background: rgba(255, 255, 255, 0.9);">
                <h2 class="card-title"> Process information</h2>
                <div class="row ">
                    <div class="center-block text-center col-md-3"> name : </div>
                    <div class="center-block col-md-9"> @process.Name </div>
                </div>
                <Hr />
                <div class="center-block text-center col-md-3"> Description : </div>
                <div class="center-block col-md-12 jumbotron" style="background: rgba(255, 255, 255, 0.9); margin-bottom:-5% ;"> @process.Description </div>
            </div>

        </div>
        <Hr />
        <div class="row" style="margin-left: 1.5%;">
            @try
            {
                foreach (var stepof in process.Steps)
                {
                    if (stepof.Id == step.Id)
                    {
                        <div class=" center-block form-control badge badge-primary badge-pill" style="margin-bottom: 0.1%">@stepof.Name </div>
                    }
                    else
                    {
                        <div class=" center-block form-control badge badge-success badge-pill"  style="margin-bottom: 0.1%">@stepof.Name </div>
                    }


                    foreach (var treatment in stepof.Treatments)
                    {

                        if (stepof.Id == step.Id)
                        {
                            <div class="form-horizontal row" style="margin-right: 0.5%; margin-bottom: 2%">

                                <div class=" center-block form-control badge badge-primary badge-pill">@treatment.Position </div>

                                <div class="center-block form-control">@treatment.Name</div>

                            </div>
                        }
                        if (stepof.Id != step.Id)
                        {
                            <div class="form-horizontal row" style="margin-right: 0.5%; margin-bottom: 2%">

                                <div class=" center-block form-control badge badge-success badge-pill">@treatment.Position </div>

                                <div class="center-block form-control" style="margin-bottom: 10%">@treatment.Name</div>

                            </div>
                        }

                    }
                    <span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>

                }

            }
            catch (Exception e)
            {

            }
            <Br>
        </div>
    </div>



}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

