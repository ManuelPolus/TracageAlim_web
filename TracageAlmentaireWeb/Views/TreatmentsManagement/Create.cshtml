w
@using Tracage.Models
@using TracageAlmentaireWeb.DAL

@model Tracage.Models.Treatment

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Treatment</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.Label("process :", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @{
                List<Step> listProcesses = new List<Step>();
                List<SelectListItem> listItems = new List<SelectListItem>();
                Mapper mapper = new Mapper("FTDb");
                listProcesses = mapper.GetSteps();
                foreach (var step in listProcesses)
                {
                    listItems.Add(new SelectListItem { Text = step.Name, Value = step.Id.ToString() });
                }
            }

            @Html.DropDownListFor(model => model.StepId, listItems, "Select Step", new { @class = "form-control" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OutgoingState , htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.Partial("~/Views/StatesManagement/Create.cshtml")
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>
