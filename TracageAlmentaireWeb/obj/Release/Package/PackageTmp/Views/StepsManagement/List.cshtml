@using Tracage.Models
@using TracageAlmentaireWeb.DAL
@model IEnumerable<Tracage.Models.Step>
@{ Mapper mapper = new Mapper("FTDb"); }

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Position)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Process_Id)
        </th>
        <th></th>
    </tr>
    @{ int i = 1;}

    @foreach (var item in Model)
    {

        if (i % 2 == 0)
        {
            <tr style="background-color: white">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @{
                        try
                        {
                            Process p = mapper.GetProcess(item.Process_Id);
                            Html.Label(p.Name);
                        }
                        catch (NullReferenceException nullex)
                        {

                        }

                    }


                </td>
                <td>
                    @Html.ActionLink("Edit", "Update", new { id = item.Id }, new { @style = "color:#00cc00;" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @style = "color:#00cc00;" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @style = "color:#00cc00;" })
                </td>
            </tr>
            i++;
        }
        else if (i % 2 != 0)
        {
            <tr style="background: rgba(0,66,22,0.1); ">
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @{
                        try
                        {
                            Process p = mapper.GetProcess(item.Process_Id);
                            Html.Label(p.Name);
                        }
                        catch (NullReferenceException nullex)
                        {

                        }

                    }


                </td>
                <td>
                    @Html.ActionLink("Edit", "Update", new { id = item.Id },new {@style= "color:#00cc00;" }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @style = "color:#00cc00;" }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @style = "color:#00cc00;" })
                </td>
            </tr>
            i++;
        }
    }

</table>
